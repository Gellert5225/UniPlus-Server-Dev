<% include ./partials/header.ejs %>
  <div id="mainBody" class="container-fluid">

    <% include ./partials/askErrorFlash.ejs %>

    <div class="row">
      <div class="col" id="leftCol" >
        <div id="askQuestion">
          <button type="button" class="btn btn-primary" id="askBtn" onclick="window.location.href='/ask'">
            ASK A QUESTION
          </button>
        </div>
        <div id="menu">
          
        </div>
      </div>
      <div class="col-7" id="midCol">
        <div class="titleWrapper">
          <p style="display: inline-block; font-family:Open Sans; font-size: 25px; 
                    font-weight: 400; margin-left: 30px; padding-top: 15px; height: 50%; ">
            <%= question.get('title'); %>
          </p>
        </div>
        <div style="border-bottom: 1px solid #e4e4e4;">
          <div class="questionBody">
            <div class="voteArea">
              <div class="upTriangle"></div>
              <p class="voteNumber"><%= question.get('upVotes'); %></p>
              <div class="downTriangle"></div>
            </div>
            <div class="bodyView" id="editor" style="border-style: none;"></div>
          </div>
        </div>
      </div>
      <div class="col" id="rightCol">
        3 of 3
      </div>
    </div>
  </div>

  <div id="sample" style="display: none;">
    <%= question.get('bodyRaw'); %>
  </div>

  <script>
    console.log("<%= question.get('user').id %>");
    if ('<%= currentUserVoteStat %>' == 'upVote') $('.upTriangle').css({'border-bottom-color': 'rgb(42, 100, 166)'});
    else if ('<%= currentUserVoteStat %>' == 'downVote') $('.downTriangle').css({'border-top-color': 'rgb(42, 100, 166)'});

    var updateReputation = function(reputationDelta) {
      <% console.log('Current reputation for user ' + question.get('user').get('nickName')
                     + ': ' + question.get('user').get('reputation')); %>
      $.ajax({
        type: 'put',
        headers: {
            'X-Parse-Application-Id': "Zj9b976AHw3b7SkOgCKzaEjB7bjJoPh2XcyxTcgU",
            "X-Parse-REST-API-Key": "restkey",
            'X-Parse-Master-Key': "T5DQ2mT8LNAp0Enn9Y3ERU0iY93sT06PctF6Dt4g"
        },
        url: "/parse/users/" + "<%= question.get('user').id %>",
        data: JSON.stringify({"reputation" : <%= question.get('user').get('reputation') %> + reputationDelta}),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function(e) {
          console.log('success');
        },error: function (xhr, status, error) {
          console.log('Error: ' + error);
        }
      });
    };

    var updateFeed = function(vote, voteType) {
      if (voteType == 'upVote' || voteType == 'downVote') {
        $.ajax({
          type: 'post',
          headers: {
              'X-Parse-Application-Id': "Zj9b976AHw3b7SkOgCKzaEjB7bjJoPh2XcyxTcgU",
              "X-Parse-REST-API-Key": "restkey",
              'X-Parse-Master-Key': "T5DQ2mT8LNAp0Enn9Y3ERU0iY93sT06PctF6Dt4g"
          },
          url: "/parse/classes/Feeds",
          data: JSON.stringify({"type" : voteType, "fromUser": {
                                                   "__type":"Pointer","className":"_User","objectId":"<%= currentUser.id %>"
                                                 }, "toUser": {
                                                   "__type":"Pointer","className":"_User","objectId":"<%= question.get('user').id %>"
                                                 }, "toQuestion": {
                                                   "__type":"Pointer","className":"Questions","objectId":"<%= question.id %>"
                                                 }}),
          contentType: "application/json; charset=utf-8",
          dataType: "json",
          success: function(e) {
            console.log('posted a feed ' + e.objectId);
            $.ajax({
              type: 'put',
              headers: {
                  'X-Parse-Application-Id': "Zj9b976AHw3b7SkOgCKzaEjB7bjJoPh2XcyxTcgU",
                  "X-Parse-REST-API-Key": "restkey",
                  'X-Parse-Master-Key': "T5DQ2mT8LNAp0Enn9Y3ERU0iY93sT06PctF6Dt4g"
              },
              url: "/parse/classes/Questions/" + "<%= question.id %>",
              data: JSON.stringify({"votes": {"__op": "AddRelation", "objects":[{"__type":"Pointer","className":"Feeds","objectId":e.objectId}]}}),
              contentType: "application/json; charset=utf-8",
              dataType: "json",
              success: function(f) {
                console.log('saved feed ' + e.objectId + ' to question: ' + "<%= question.id %>" + ' ' + JSON.stringify(f));
              },error: function (xhr, status, error) {
                console.log('Error: ' + error);
              }
            });
          },error: function (xhr, status, error) {
            console.log('Error: ' + error);
          }
        });
      } else {
        $.ajax({
          type: 'get',
          headers: {
              'X-Parse-Application-Id': "Zj9b976AHw3b7SkOgCKzaEjB7bjJoPh2XcyxTcgU",
              "X-Parse-REST-API-Key": "restkey",
              'X-Parse-Master-Key': "T5DQ2mT8LNAp0Enn9Y3ERU0iY93sT06PctF6Dt4g"
          },
          url: "/parse/classes/Feeds?",
          data: "where=" + escape(JSON.stringify({"$relatedTo":{
                                                   "object":{
                                                     "__type":"Pointer","className":"Questions","objectId":"<%= question.id %>"
                                                   },"key":"votes"
                                                 }, "fromUser": {
                                                   "__type":"Pointer","className":"_User","objectId":"<%= currentUser.id %>"
                                                 },"toQuestion": {
                                                   "__type":"Pointer","className":"Questions","objectId":"<%= question.id %>"
                                                 }
                                                 })),
          processData: false,
          success: function(results) {
            var array = results.results;
            console.log('success retrieved ' + array.length + ' Feeds!' + ' ' + JSON.stringify(array));
            if (array.length) {
              if ((voteType == 'up' && vote == -1) || (voteType == 'down' && vote == 1)) {
                $.ajax({
                  type: 'delete',
                  headers: {
                      'X-Parse-Application-Id': "Zj9b976AHw3b7SkOgCKzaEjB7bjJoPh2XcyxTcgU",
                      "X-Parse-REST-API-Key": "restkey",
                      'X-Parse-Master-Key': "T5DQ2mT8LNAp0Enn9Y3ERU0iY93sT06PctF6Dt4g"
                  },
                  url: "/parse/classes/Feeds/" + array[0].objectId,
                  success: function(d) {
                    console.log('deleted feed');
                  }, error: function (xhr, status, error) {
                    console.log('Error: ' + error);
                  }
                });
              } else if ((voteType == 'up' && vote == 2) || (voteType == 'down' && vote == -2)) {
                $.ajax({
                  type: 'put',
                  headers: {
                      'X-Parse-Application-Id': "Zj9b976AHw3b7SkOgCKzaEjB7bjJoPh2XcyxTcgU",
                      "X-Parse-REST-API-Key": "restkey",
                      'X-Parse-Master-Key': "T5DQ2mT8LNAp0Enn9Y3ERU0iY93sT06PctF6Dt4g"
                  },
                  data: voteType == 'up' ? JSON.stringify({"type" : "upVote"}) : JSON.stringify({"type" : "downVote"}),
                  contentType: "application/json; charset=utf-8",
                  dataType: "json",
                  url: "/parse/classes/Feeds/" + array[0].objectId,
                  success: function(d) {
                    console.log('updated feed');
                  }, error: function (xhr, status, error) {
                    console.log('Error: ' + error);
                  }
                });
              }
            }
          }, error: function (xhr, status, error) {
            console.log('Error: ' + error);
          }
        });
      }

    };

    var updateVote = function(voteDelta) {
      <% console.log('Current vote ' + question.get('upVotes')); %>
      $.ajax({
        type: 'put',
        headers: {
            'X-Parse-Application-Id': "Zj9b976AHw3b7SkOgCKzaEjB7bjJoPh2XcyxTcgU",
            "X-Parse-REST-API-Key": "restkey",
            'X-Parse-Master-Key': "T5DQ2mT8LNAp0Enn9Y3ERU0iY93sT06PctF6Dt4g"
        },
        url: "/parse/classes/Questions/" + "<%= question.id %>",
        data: JSON.stringify({"upVotes" : <%= question.get('upVotes') %> + voteDelta}),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function(e) {
          console.log('success');
        },error: function (xhr, status, error) {
          console.log('Error: ' + error);
        }
      });
    };

    $('.upTriangle').click(function(){
      var voteDelta = 0;
      var repDelta = 0;
      var voteType;
      if ($('.downTriangle').css('border-top-color') == 'rgb(42, 100, 166)') {
        $('.downTriangle').css({'border-top-color': 'rgb(153, 168, 191)'});
        $('.upTriangle').css({'border-bottom-color': 'rgb(42, 100, 166)'});
        $('.voteNumber').text(parseInt($(".voteNumber").text()) + 2);
        voteDelta = 2;
        repDelta = 20;
        voteType = 'up';
      } else {
        if ($('.upTriangle').css('border-bottom-color') == "rgb(153, 168, 191)") {
          $('.upTriangle').css({'border-bottom-color': 'rgb(42, 100, 166)'});
          $('.voteNumber').text(parseInt($(".voteNumber").text()) + 1);
          voteDelta = 1;
          repDelta = 10;
          voteType = 'upVote';
        } else {
          $('.upTriangle').css({'border-bottom-color': 'rgb(153, 168, 191)'});
          $('.voteNumber').text(parseInt($(".voteNumber").text()) - 1);
          voteDelta = -1;
          repDelta = -10;
          voteType = 'up';
        }
      }
      updateFeed(voteDelta, voteType);
      updateReputation(repDelta);
      updateVote(voteDelta);
    });

    $('.downTriangle').click(function(){
      var voteDelta = 0;
      var repDelta = 0;
      var voteType;
      if ($('.upTriangle').css('border-bottom-color') == 'rgb(42, 100, 166)') {
        $('.upTriangle').css({'border-bottom-color': 'rgb(153, 168, 191)'});
        $('.downTriangle').css({'border-top-color': 'rgb(42, 100, 166)'});
        $('.voteNumber').text(parseInt($(".voteNumber").text()) - 2);
        voteDelta = -2;
        repDelta = -20;
        var voteType = 'down';
      } else {
        if ($('.downTriangle').css('border-top-color') == "rgb(153, 168, 191)") {
          $('.downTriangle').css({'border-top-color': 'rgb(42, 100, 166)'});
          $('.voteNumber').text(parseInt($(".voteNumber").text()) - 1);
          voteDelta = -1;
          repDelta = -10;
          var voteType = 'downVote';
        } else {
          $('.downTriangle').css({'border-top-color': 'rgb(153, 168, 191)'});
          $('.voteNumber').text(parseInt($(".voteNumber").text()) + 1);
          voteDelta = 1;
          repDelta = 10;
          var voteType = 'down';
        }
      }
      updateFeed(voteDelta, voteType);
      updateReputation(repDelta);
      updateVote(voteDelta);
    });
  </script>

  <script>
    var quill = new Quill('#editor', {
      modules: {
        toolbar: null
      },
      theme: 'snow',
      placeholder: 'What\'s your question? Be specific...'
    });

    $( document ).ready(function() {
      var text = $('#sample').text();
      quill.root.innerHTML = text.substring(5, text.length - 3);
    });
  </script>

<% include ./partials/footer.ejs %>